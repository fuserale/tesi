 %%%%%%%%%%%%%%%%%%%%%  input settings  %%%%%%%%%%%%%%%%%%
 
 	net.hyperParam.sizeFmInput = [24]; 	% 10 const bits , 4 label encode and 10 random 
 	net.hyperParam.numFmInput  = 1;        	% number of feature map of the input
 
 %%%%%%%%%%%%%%%%%%%%%  Layers specification %%%%%%%%%%%%%%%%%%
 

 	net.layers{end+1}.properties = struct('type',2,'numFm',12,'kernel',5);
 	net.layers{end+1}.properties = struct('type',1,'numFm',128);
 	net.layers{end+1}.properties = struct('type',1,'numFm',16);
 
 %%%%%%%%%%%%%%%%%%%%%  Hyper params - training %%%%%%%%%%%%%%%%%%
 
 	net.hyperParam.trainLoopCount = 8000;		%on how many images to train before evaluating the network
 	net.hyperParam.testImageNum   = 400;   	% after each loop, on how many images to evaluate network performance
 	net.hyperParam.ni_initial     = 0.001;		% ni to start training process
    net.hyperParam.momentum       = 0.9;

 	net.hyperParam.ni_final       = 0.0005;	        % final ni to stop the training process
    net.hyperParam.normalizeNetworkInput = 0;
 
