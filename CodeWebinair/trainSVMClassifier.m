function [trainedClassifier, validationAccuracy, cvp] = trainSVMClassifier(datasetTable)
% Extract predictors and response
predictorNames = {'TotalAccXMean', 'TotalAccYMean', 'TotalAccZMean', 'BodyAccXRMS', 'BodyAccYRMS', 'BodyAccZRMS', 'BodyAccXCovZeroValue', 'BodyAccXCovFirstPos', 'BodyAccXCovFirstValue', 'BodyAccYCovZeroValue', 'BodyAccYCovFirstPos', 'BodyAccYCovFirstValue', 'BodyAccZCovZeroValue', 'BodyAccZCovFirstPos', 'BodyAccZCovFirstValue', 'BodyAccXSpectPos1', 'BodyAccXSpectPos2', 'BodyAccXSpectPos3', 'BodyAccXSpectPos4', 'BodyAccXSpectPos5', 'BodyAccXSpectPos6', 'BodyAccXSpectVal1', 'BodyAccXSpectVal2', 'BodyAccXSpectVal3', 'BodyAccXSpectVal4', 'BodyAccXSpectVal5', 'BodyAccXSpectVal6', 'BodyAccYSpectPos1', 'BodyAccYSpectPos2', 'BodyAccYSpectPos3', 'BodyAccYSpectPos4', 'BodyAccYSpectPos5', 'BodyAccYSpectPos6', 'BodyAccYSpectVal1', 'BodyAccYSpectVal2', 'BodyAccYSpectVal3', 'BodyAccYSpectVal4', 'BodyAccYSpectVal5', 'BodyAccYSpectVal6', 'BodyAccZSpectPos1', 'BodyAccZSpectPos2', 'BodyAccZSpectPos3', 'BodyAccZSpectPos4', 'BodyAccZSpectPos5', 'BodyAccZSpectPos6', 'BodyAccZSpectVal1', 'BodyAccZSpectVal2', 'BodyAccZSpectVal3', 'BodyAccZSpectVal4', 'BodyAccZSpectVal5', 'BodyAccZSpectVal6', 'BodyAccXPowerBand1', 'BodyAccXPowerBand2', 'BodyAccXPowerBand3', 'BodyAccXPowerBand4', 'BodyAccXPowerBand5', 'BodyAccYPowerBand1', 'BodyAccYPowerBand2', 'BodyAccYPowerBand3', 'BodyAccYPowerBand4', 'BodyAccYPowerBand5', 'BodyAccZPowerBand1', 'BodyAccZPowerBand2', 'BodyAccZPowerBand3', 'BodyAccZPowerBand4', 'BodyAccZPowerBand5'};
predictors = datasetTable(:,predictorNames);
predictors = table2array(varfun(@double, predictors));
response = datasetTable.ActivityID;
% Train a classifier
template = templateSVM('KernelFunction', 'polynomial', 'PolynomialOrder', 2, 'KernelScale', 'auto', 'BoxConstraint', 1, 'Standardize', 1);
trainedClassifier = fitcecoc(predictors, response, 'Learners', template, 'Coding', 'onevsone', 'PredictorNames', {'TotalAccXMean' 'TotalAccYMean' 'TotalAccZMean' 'BodyAccXRMS' 'BodyAccYRMS' 'BodyAccZRMS' 'BodyAccXCovZeroValue' 'BodyAccXCovFirstPos' 'BodyAccXCovFirstValue' 'BodyAccYCovZeroValue' 'BodyAccYCovFirstPos' 'BodyAccYCovFirstValue' 'BodyAccZCovZeroValue' 'BodyAccZCovFirstPos' 'BodyAccZCovFirstValue' 'BodyAccXSpectPos1' 'BodyAccXSpectPos2' 'BodyAccXSpectPos3' 'BodyAccXSpectPos4' 'BodyAccXSpectPos5' 'BodyAccXSpectPos6' 'BodyAccXSpectVal1' 'BodyAccXSpectVal2' 'BodyAccXSpectVal3' 'BodyAccXSpectVal4' 'BodyAccXSpectVal5' 'BodyAccXSpectVal6' 'BodyAccYSpectPos1' 'BodyAccYSpectPos2' 'BodyAccYSpectPos3' 'BodyAccYSpectPos4' 'BodyAccYSpectPos5' 'BodyAccYSpectPos6' 'BodyAccYSpectVal1' 'BodyAccYSpectVal2' 'BodyAccYSpectVal3' 'BodyAccYSpectVal4' 'BodyAccYSpectVal5' 'BodyAccYSpectVal6' 'BodyAccZSpectPos1' 'BodyAccZSpectPos2' 'BodyAccZSpectPos3' 'BodyAccZSpectPos4' 'BodyAccZSpectPos5' 'BodyAccZSpectPos6' 'BodyAccZSpectVal1' 'BodyAccZSpectVal2' 'BodyAccZSpectVal3' 'BodyAccZSpectVal4' 'BodyAccZSpectVal5' 'BodyAccZSpectVal6' 'BodyAccXPowerBand1' 'BodyAccXPowerBand2' 'BodyAccXPowerBand3' 'BodyAccXPowerBand4' 'BodyAccXPowerBand5' 'BodyAccYPowerBand1' 'BodyAccYPowerBand2' 'BodyAccYPowerBand3' 'BodyAccYPowerBand4' 'BodyAccYPowerBand5' 'BodyAccZPowerBand1' 'BodyAccZPowerBand2' 'BodyAccZPowerBand3' 'BodyAccZPowerBand4' 'BodyAccZPowerBand5'}, 'ResponseName', 'ActivityID', 'ClassNames', categorical({'1' '2' '3' '4' '5' '6'}));

% Set up holdout validation
cvp = cvpartition(response, 'Holdout', 0.25);
trainingPredictors = predictors(cvp.training,:);
trainingResponse = response(cvp.training,:);

% Train a classifier
template = templateSVM('KernelFunction', 'polynomial', 'PolynomialOrder', 2, 'KernelScale', 'auto', 'BoxConstraint', 1, 'Standardize', 1);
validationModel = fitcecoc(trainingPredictors, trainingResponse, 'Learners', template, 'Coding', 'onevsone', 'PredictorNames', {'TotalAccXMean' 'TotalAccYMean' 'TotalAccZMean' 'BodyAccXRMS' 'BodyAccYRMS' 'BodyAccZRMS' 'BodyAccXCovZeroValue' 'BodyAccXCovFirstPos' 'BodyAccXCovFirstValue' 'BodyAccYCovZeroValue' 'BodyAccYCovFirstPos' 'BodyAccYCovFirstValue' 'BodyAccZCovZeroValue' 'BodyAccZCovFirstPos' 'BodyAccZCovFirstValue' 'BodyAccXSpectPos1' 'BodyAccXSpectPos2' 'BodyAccXSpectPos3' 'BodyAccXSpectPos4' 'BodyAccXSpectPos5' 'BodyAccXSpectPos6' 'BodyAccXSpectVal1' 'BodyAccXSpectVal2' 'BodyAccXSpectVal3' 'BodyAccXSpectVal4' 'BodyAccXSpectVal5' 'BodyAccXSpectVal6' 'BodyAccYSpectPos1' 'BodyAccYSpectPos2' 'BodyAccYSpectPos3' 'BodyAccYSpectPos4' 'BodyAccYSpectPos5' 'BodyAccYSpectPos6' 'BodyAccYSpectVal1' 'BodyAccYSpectVal2' 'BodyAccYSpectVal3' 'BodyAccYSpectVal4' 'BodyAccYSpectVal5' 'BodyAccYSpectVal6' 'BodyAccZSpectPos1' 'BodyAccZSpectPos2' 'BodyAccZSpectPos3' 'BodyAccZSpectPos4' 'BodyAccZSpectPos5' 'BodyAccZSpectPos6' 'BodyAccZSpectVal1' 'BodyAccZSpectVal2' 'BodyAccZSpectVal3' 'BodyAccZSpectVal4' 'BodyAccZSpectVal5' 'BodyAccZSpectVal6' 'BodyAccXPowerBand1' 'BodyAccXPowerBand2' 'BodyAccXPowerBand3' 'BodyAccXPowerBand4' 'BodyAccXPowerBand5' 'BodyAccYPowerBand1' 'BodyAccYPowerBand2' 'BodyAccYPowerBand3' 'BodyAccYPowerBand4' 'BodyAccYPowerBand5' 'BodyAccZPowerBand1' 'BodyAccZPowerBand2' 'BodyAccZPowerBand3' 'BodyAccZPowerBand4' 'BodyAccZPowerBand5'}, 'ResponseName', 'ActivityID', 'ClassNames', categorical({'1' '2' '3' '4' '5' '6'}));

% Compute validation accuracy
validationPredictors = predictors(cvp.test,:);
validationResponse = response(cvp.test,:);
validationAccuracy = 1 - loss(validationModel, validationPredictors, validationResponse, 'LossFun', 'ClassifError');

%% Uncomment this section to compute validation predictions and scores:
% % Compute validation predictions and scores
% [validationPredictions, validationScores] = predict(validationModel, validationPredictors);